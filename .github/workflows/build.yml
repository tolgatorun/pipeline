name: Build and Deploy with Docker to EC2

on:
  push:
    branches:
      - main # Or your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR) # Changed
        uses: docker/login-action@v3
        with:
          registry: ghcr.io # Added registry
          username: ${{ github.actor }} # Use GitHub Actions context
          password: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          build-args: | # Add any build arguments here
            VERSION=${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-action@v1
        with:
          ssh_private_key: ${{ secrets.EC2_SSH_KEY }} # Changed secret name
          ssh_known_hosts: ${{ secrets.KNOWN_HOSTS }}
          ssh_host: ${{ secrets.EC2_HOST }} # Changed secret name
          ssh_port: ${{ secrets.EC2_PORT }} # Changed secret name
          ssh_user: ${{ secrets.EC2_USER }} # Changed secret name
          script: |
            echo "Logging in to EC2 instance..."
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} ghcr.io # Changed to use TOKEN
            echo "Pulling the latest image..."
            docker pull ghcr.io/${{ github.repository }}:latest
            echo "Stopping the old container (if running)..."
            docker stop hello-world-container || true
            echo "Removing the old container (if it exists)..."
            docker rm hello-world-container || true
            echo "Running the new container..."
            docker run -d -p 80:8000 --name hello-world-container ghcr.io/${{ github.repository }}:latest
            echo "Deployment successful!"
